<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
	version="3.0">
	
  <display-name>DemoCustomer</display-name>

	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>

	<!-- 用于单点退出，该过滤器用于实现单点登出功能，可选配置-->
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	 
	<!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	<filter>
	    <filter-name>CAS Single Sign Out Filter</filter-name>
	    <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>CAS Single Sign Out Filter</filter-name>
	    <url-pattern>/sso/*</url-pattern>
	</filter-mapping>
	 
	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
	<filter>
	    <filter-name>CASFilter</filter-name>
	    <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
	    <init-param>
	        <param-name>casServerLoginUrl</param-name>
	        <param-value>https://sso.demo.com:8443/cas/login</param-value>
	    </init-param>
	    <init-param>
	        <!--这里的server是服务端的IP-->
	        <param-name>serverName</param-name>
	        <param-value>http://localhost:8181</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>CASFilter</filter-name>
	    <url-pattern>/sso/*</url-pattern>
	</filter-mapping>
	 
	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
	    <filter-name>CAS Validation Filter</filter-name>
	    <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
	    <init-param>
	        <param-name>casServerUrlPrefix</param-name>
	        <param-value>https://sso.demo.com:8443/cas</param-value>
	    </init-param>
	    <init-param>
	        <param-name>serverName</param-name>
	        <param-value>http://localhost:8181</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>CAS Validation Filter</filter-name>
	    <url-pattern>/sso/*</url-pattern>
	</filter-mapping>
	 
	<!--
	该过滤器负责实现HttpServletRequest请求的包裹，
	比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。
	-->
<!-- 	<filter> -->
<!-- 	    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name> -->
<!-- 	    <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class> -->
<!-- 	</filter> -->
<!-- 	<filter-mapping> -->
<!-- 	    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name> -->
<!-- 	    <url-pattern>/sso/*</url-pattern> -->
<!-- 	</filter-mapping> -->
	 
	<!--
	该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
	比如AssertionHolder.getAssertion().getPrincipal().getName()。
	-->
<!-- 	<filter> -->
<!-- 	    <filter-name>CAS Assertion Thread Local Filter</filter-name> -->
<!-- 	    <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class> -->
<!-- 	</filter> -->
<!-- 	<filter-mapping> -->
<!-- 	    <filter-name>CAS Assertion Thread Local Filter</filter-name> -->
<!-- 	    <url-pattern>/sso/*</url-pattern> -->
<!-- 	</filter-mapping> -->
	 
	<!-- 自动根据单点登录的结果设置本系统的用户信息 -->
	<filter>
	    <display-name>AutoSetUserAdapterFilter</display-name>
	    <filter-name>AutoSetUserAdapterFilter</filter-name>
	    <filter-class>com.demo.subsystem.common.AutoSetUserAdapterFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>AutoSetUserAdapterFilter</filter-name>
	    <url-pattern>/sso/*</url-pattern>
	</filter-mapping>
	<!-- ======================== 单点登录结束 ======================== -->

  
  
  <filter>
    <filter-name>Set Character Encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>Set Character Encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	classpath:applicationContext.xml
    	,classpath:spring-datasource.xml
		,classpath:spring-mybatis.xml
    </param-value>
  </context-param>
  <listener>
    <listener-class>com.demo.subsystem.common.InitializationListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <servlet-name>spring</servlet-name>
  </filter-mapping>
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>/static/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-servlet.xml</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>